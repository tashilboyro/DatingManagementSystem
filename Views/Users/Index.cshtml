@model IEnumerable<DatingManagementSystem.Models.User>

@{
	ViewData["Title"] = "Users List";
}
@{
	var userName = Context.Session.GetString("UserName");
	var userEmail = Context.Session.GetString("UserEmail");
	var userID = Context.Session.GetString("UserID");
    }
<!-- Swiper Container -->
<div class="swiper-container">
    <div class="swiper-wrapper">
        @foreach (var user in Model)
        {
            <div class="swiper-slide">
                <div class="card shadow-lg p-3 text-center">
                    @{
                        string base64Image = user.ProfilePicture != null ? $"data:image/png;base64,{Convert.ToBase64String(user.ProfilePicture)}" : "/images/default-avatar.png";
                    }
                    <img src="@base64Image" class="rounded-circle" alt="@user.FirstName" style="width: 150px; height: 150px; object-fit: cover;">
                    <h5 class="mt-3">@user.FirstName, @user.Age</h5>
                    <p>@user.Bio</p>
                    <div class="mt-3">
                        <button class="btn btn-success rounded-pill">Like ❤️</button>
                        <button class="btn btn-danger rounded-pill">Skip ❌</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Swiper Pagination & Navigation -->
    <div class="swiper-pagination"></div>
    <div class="swiper-button-next"></div>
    <div class="swiper-button-prev"></div>
</div>

<!-- Swiper.js CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css">
<script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>

<script>
    var swiper = new Swiper('.swiper-container', {
        slidesPerView: 1,
        spaceBetween: 10,
        loop: true,
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
    });

	// Store user details in Session Storage
	sessionStorage.setItem("UserName", "@userName");
	sessionStorage.setItem("UserEmail", "@userEmail");
	sessionStorage.setItem("UserID", "@userID");

	// Retrieve and log session storage data
	console.log("User Name:", sessionStorage.getItem("UserName"));
	console.log("User Email:", sessionStorage.getItem("UserEmail"));
	console.log("User ID:", sessionStorage.getItem("UserID"));

	 document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM fully loaded and parsed, calling fetchCompatibilityScores");
        fetchCompatibilityScores();
    });

    async function fetchCompatibilityScores() {
        const tableBody = document.getElementById("userTableBody");

        if (!tableBody) {
            console.error("Error: 'userTableBody' element not found in the DOM.");
            return; // Stop execution if the element is missing
        }

        const userId = sessionStorage.getItem("UserID");

        try {
            const response = await fetch(`/Users/GetSortedCompatibilityScoresForLoggedInUser`);
            const result = await response.json();

            console.log("Fetched sorted scores:", result);

            tableBody.innerHTML = ""; // Clear existing rows

            for (let item of result) {
                const user = item.user;
               

                if (user) {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${user.firstName}</td>
                        <td>${user.lastName}</td>
                        <td>${user.age}</td>
                        <td>${user.gender}</td>
                        <td>${user.email}</td>
                        <td>${user.interests}</td>
                        <td><img src="${user.profilePictureUrl}" width="60" height="60" class="rounded-circle border border-secondary"></td>
                        <td>${user.bio}</td>
                        <td>${new Date(user.createdAt).toLocaleDateString()}</td>
                        <td>
                            <button class="btn btn-primary btn-sm">View</button>
                            <button class="btn btn-warning btn-sm">Edit</button>
                            <button class="btn btn-danger btn-sm">Delete</button>
                        </td>
                    `;
                    tableBody.appendChild(row);
                } else {
                    console.log("User data not found for UserId:", userId);
                }
            }
        } catch (error) {
            console.error("Error fetching compatibility scores or user details:", error);
        }
    }



</script>